actor ExAbstractPowerupItem : CustomInventory 
{
	Radius 14
	Height 40
	Scale 0.8
	
	Inventory.PickupSound "pickups/powerup"
	
	+INVENTORY.FANCYPICKUPSOUND
	+FLOATBOB
	+COUNTITEM
}

actor ExAbstractPowerup : CustomInventory 
{
	Inventory.InterHubAmount 5
	Inventory.MaxAmount 5
	Inventory.UseSound "pickups/powerup_use"

	+INVENTORY.INVBAR
}

actor ExAbstractInactivePowerup : ExAbstractPowerup 
{
	States 
	{
		Use:
			NULL A 0 A_PlaySound("pickups/powerup_use_fail")
			NULL A 0 A_Log("Not enough mana!")
			fail
	}
}

//TORCH
actor ExTorchItem : ExAbstractPowerupItem 744 
{
	//$Category Powerups
	//$Title Torch
	
	Inventory.PickupMessage "Torch!"

	States 
	{
		Spawn:
			PTRC ABCDEFGH 4
			loop
			
		Pickup:
			NULL A 0 A_JumpIfInventory("ExInactiveTorchPowerup", 5, "Stay")
			NULL A 0 A_JumpIfInventory("ExTorchPowerup", 5, "Stay")
			NULL A 0 A_JumpIfInventory("ExManaAmmo", 3, "GivePowerup")
			NULL A 0 A_GiveInventory("ExInactiveTorchPowerup", 1)
			stop
			
		GivePowerup:
			NULL A 0 A_GiveInventory("ExTorchPowerup", 1)
			stop
			
		Stay:
			NULL A 0
			fail
	}
}

actor ExTorchPowerup : ExAbstractPowerup
{
	Inventory.Icon "PTRCA0"
	Inventory.UseSound "pickups/torch_use"

	States 
	{
		Use:
			NULL A 0 A_JumpIfInventory("ExTorchActiveMarker", 0, "DontUse")
			NULL A 0 A_TakeInventory("ExManaAmmo", 3) //if player has this item, he can actually use it
			NULL A 0 A_GiveInventory("ExTorchActiveMarker", 1)
			NULL A 0 ACS_NamedExecute("ExUpdatePowerups")
			NULL A 0 A_SpawnItem("ExFireFly")
			stop
			
		DontUse:
			NULL A 0 A_Log("Torch is already lit!")
			NULL A 0 A_PlaySound("pickups/powerup_use_fail")
			fail	
	}
}

actor ExInactiveTorchPowerup : ExAbstractInactivePowerup 
{
	Inventory.Icon "PTRCX0"
}

// Initially it was a monster chasing the player very fast (which wasn't working all that well), hence the name :)
actor ExFireFly 
{
	Radius 1
	Height 1

	-SHOOTABLE
	-SOLID
	+NOGRAVITY
	+NOTIMEFREEZE
	+INVISIBLE
	+DONTSPLASH
	+NOBLOCKMAP

	States 
	{
		Spawn:
			FFLY A 1
			NULL A 0 A_PlaySound("pickups/torch_loop", CHAN_AUTO, 0.7, true, 5)
			NULL A 0 Thing_ChangeTID(0, CallACS("ExGetPlayerID") + 16)
			goto Light

		Light:
			FFLY AAAAABBBBBCCCCCDDDDDAAAAABBBBBCCCCC 1 ACS_NamedExecute("ExUpdateTorchPowerupLight", 0, tid)
			NULL A 0 A_SetArg(0, args[0] + 1)
			NULL A 0 A_JumpIf(args[0] > 45 && args[1] == 0, "ExpiringWarn")
			NULL A 0 A_JumpIf(args[0] > 60, "Expire") //expires after 1 minute
			loop

		ExpiringWarn:
			NULL A 0 A_Log("Torch power is running out!")
			NULL A 0 A_SetArg(1, 1)
			goto Light
			
		Expire:
			NULL A 0 A_Log("Torch power expired!")
			NULL A 0 A_TakeInventory("ExTorchActiveMarker", 1, 0, AAPTR_TARGET)
			NULL A 0 A_PlaySound("pickups/torch_use", CHAN_AUTO, 0.7)
			FFLY EFGH 4
			stop
	}
}

// Breathing mask powerup
actor ExBreathingMaskItem : ExAbstractPowerupItem 754 
{
	//$Category Powerups
	//$Title Breathing mask
	
	Inventory.PickupMessage "Breathing mask!"

	States 
	{
		Spawn:
			PMSK A -1
			stop
			
		Pickup:
			NULL A 0 A_JumpIfInventory("ExInactiveBreathingMaskPowerup", 5, "Stay")
			NULL A 0 A_JumpIfInventory("ExBreathingMaskPowerup", 5, "Stay")
			NULL A 0 A_JumpIfInventory("ExManaAmmo", 6, "GivePowerup") //todo: check mana ammount!!!
			NULL A 0 A_GiveInventory("ExInactiveBreathingMaskPowerup", 1)
			stop
			
		GivePowerup:
			NULL A 0 A_GiveInventory("ExBreathingMaskPowerup", 1)
			stop
			
		Stay:
			NULL A 0
			fail
	}
}

actor ExBreathingMaskPowerup : ExAbstractPowerup
{
	Inventory.Icon "PMSKA0"
	
	States 
	{
		Use:
			NULL A 0 A_TakeInventory("ExManaAmmo", 6) //if player has this item, he can actually use it
			NULL A 0 ACS_NamedExecute("ExUpdatePowerups")
			NULL A 0 ACS_NamedTerminate("ExOnRefillAirSupplyUsed")
			NULL A 0 ACS_NamedExecute("ExOnRefillAirSupplyUsed")
			stop
	}
}

actor ExInactiveBreathingMaskPowerup : ExAbstractInactivePowerup 
{
	Inventory.Icon "PMSKX0"
}

//Weapon power powerup
actor ExWeaponPowerItem : ExAbstractPowerupItem 752 
{
	//$Category Powerups
	//$Title Weapon power
	Inventory.PickupMessage "Weapon might!"

	States 
	{
		Spawn:
			PHND A random(64, 128)
			PHND B 4
			loop
			
		Pickup:
			NULL A 0 A_JumpIfInventory("ExInactiveWeaponPowerPowerup", 5, "Stay")
			NULL A 0 A_JumpIfInventory("ExWeaponPowerPowerup", 5, "Stay")
			NULL A 0 A_JumpIfInventory("ExManaAmmo", 15, "GivePowerup")
			NULL A 0 A_GiveInventory("ExInactiveWeaponPowerPowerup", 1)
			stop
			
		GivePowerup:
			NULL A 0 A_GiveInventory("ExWeaponPowerPowerup", 1)
			stop
			
		Stay:
			NULL A 0
			fail
	}
}

actor ExWeaponPowerPowerup : ExAbstractPowerup 
{
	Inventory.Icon "PHNDA0"
	Inventory.UseSound "pickups/weapon_power_use"

	States 
	{
		Use:
			NULL A 0 A_JumpIf(CallACS("ExPlayerIsMorphed"), "DontUse")
			NULL A 0 A_TakeInventory("ExManaAmmo", 15) //if player has this item, he can actually use it
			NULL A 0 ACS_NamedExecute("ExUpdatePowerups")
			NULL A 0 A_TakeInventory("PowerWeaponLevel2", 1)
			NULL A 0 A_GiveInventory("ExWeaponPowerGiver", 1)
			stop
			
		DontUse:
			NULL A 0 A_Log("Can't do that right now!")
			NULL A 0 A_PlaySound("pickups/powerup_use_fail")
			fail	
	}
}

actor ExWeaponPowerGiver : PowerupGiver
{
	Powerup.Type Weaponlevel2
	Powerup.Duration -60 //60 seconds
	//Powerup.Color Red, 0.3 
	
	+INVENTORY.AUTOACTIVATE
}

actor ExInactiveWeaponPowerPowerup : ExAbstractInactivePowerup 
{
	Inventory.Icon "PHNDX0"
}

//Scarab powerup
actor ExInvulnerabilityItem : ExAbstractPowerupItem 736 
{
	//$Category Powerups
	//$Title Invulnerability powerup
	
	Inventory.PickupMessage "Invulnerability!"

	States 
	{
		Spawn:
			PSCR A random(110, 200)
			PSCR BCDEFGH 3
			loop
			
		Pickup:
			NULL A 0 A_JumpIfInventory("ExInactiveInvulnerabilityPowerup", 5, "Stay")
			NULL A 0 A_JumpIfInventory("ExInvulnerabilityPowerup", 5, "Stay")
			NULL A 0 A_JumpIfInventory("ExManaAmmo", 30, "GivePowerup")
			NULL A 0 A_GiveInventory("ExInactiveInvulnerabilityPowerup", 1)
			stop
			
		GivePowerup:
			NULL A 0 A_GiveInventory("ExInvulnerabilityPowerup", 1)
			stop
			
		Stay:
			NULL A 0
			fail
	}
}

actor ExInvulnerabilityPowerup : ExAbstractPowerup //PowerInvulnerable
{
	Inventory.Icon "PSCRA0"

	States 
	{
		Use:
			NULL A 0 A_TakeInventory("ExManaAmmo", 30) //if player has this item, he can actually use it
			NULL A 0 ACS_NamedExecute("ExUpdatePowerups")
			NULL A 0 A_TakeInventory("PowerInvulnerable", 1)
			NULL A 0 A_GiveInventory("ExInvulnerabilityGiver", 1)
			stop
	}
}

actor ExInvulnerabilityGiver : PowerupGiver
{
  Powerup.Type Invulnerable
	Powerup.Duration -60 //60 seconds
	Powerup.Color Blue, 0.1
	
	+INVENTORY.AUTOACTIVATE
}

actor ExInactiveInvulnerabilityPowerup : ExAbstractInactivePowerup 
{
	Inventory.Icon "PSCRX0"
}

//Heart powerup, 20 mana
actor ExFullHealthItem : ExAbstractPowerupItem 771 
{
	//$Category Powerups
	//$Title Health powerup
	
	Inventory.PickupMessage "Full health!"
	Inventory.PickupSound "pickups/heart"

	States 
	{
		Spawn:
			PHRT A 56
			PHRT B 5 A_PlaySound("pickups/heart", CHAN_AUTO, 0.5, false, 3)
			PHRT CD 5
			loop
			
		Pickup:
			NULL A 0 A_JumpIfInventory("ExInactiveFullHealthPowerup", 5, "Stay")
			NULL A 0 A_JumpIfInventory("ExFullHealthPowerup", 5, "Stay")
			NULL A 0 A_JumpIfInventory("ExManaAmmo", 15, "GivePowerup")
			NULL A 0 A_GiveInventory("ExInactiveFullHealthPowerup", 1)
			stop
			
		GivePowerup:
			NULL A 0 A_GiveInventory("ExFullHealthPowerup", 1)
			stop
			
		Stay:
			NULL A 0
			fail
	}
}

actor ExFullHealthPowerup : ExAbstractPowerup 
{
	Inventory.Icon "PHRTA0"
	Inventory.UseSound "pickups/heart"

	States 
	{
		Use:
			NULL A 0 A_TakeInventory("ExManaAmmo", 15) //if player has this item, he can actually use it
			NULL A 0 ACS_NamedExecute("ExUpdatePowerups")
			NULL A 0 A_GiveInventory("ExFullLife")
			stop
	}
}

actor ExInactiveFullHealthPowerup : ExAbstractInactivePowerup 
{
	Inventory.Icon "PHRTX0"
}

//INVISIBILITY
actor ExInvisibilityItem : ExAbstractPowerupItem 726 
{
	//$Category Powerups
	//$Title Invisibility powerup
	
	Inventory.PickupMessage "Invisibility!"

	States 
	{
		Spawn:
			PINV A random(70, 110)
			PINV BCDEFFFFFEFFFFEEFFFEDCB 4
			loop

		Pickup:
			NULL A 0 A_JumpIfInventory("ExInactiveInvisibilityPowerup", 5, "Stay")
			NULL A 0 A_JumpIfInventory("ExInvisibilityPowerup", 5, "Stay")
			NULL A 0 A_JumpIfInventory("ExManaAmmo", 10, "GivePowerup")
			NULL A 0 A_GiveInventory("ExInactiveInvisibilityPowerup", 1)
			stop
			
		GivePowerup:
			NULL A 0 A_GiveInventory("ExInvisibilityPowerup", 1)
			stop
			
		Stay:
			NULL A 0
			fail
	}
}


actor ExInvisibilityPowerup : ExAbstractPowerup 
{
	Inventory.Icon "PINVA0"

	States 
	{
		Use:
			NULL A 0 A_TakeInventory("ExManaAmmo", 10) //if player has this item, he can actually use it
			NULL A 0 ACS_NamedExecute("ExUpdatePowerups")
			NULL A 0 A_GiveInventory("PowerInvisibility") //todo: check duration and effect [Powerup.Duration -60 (neg. == seconds)]
			stop
	}
}

actor ExInactiveInvisibilityPowerup : ExAbstractInactivePowerup 
{
	Inventory.Icon "PINVX0"
}

////////////////////////
//INSTANT USE POWERUPS//
////////////////////////

//FULL MAP
actor ExMap : MapRevealer 982 
{
	//$Category Powerups
	//$Title Full map
	
	Scale 0.3
	Radius 14
	Height 40

	Inventory.MaxAmount 0
	inventory.pickupsound "pickups/mana2"
	inventory.pickupmessage "Map revealed!"
	
	+COUNTITEM
	+INVENTORY.FANCYPICKUPSOUND
	+INVENTORY.ALWAYSPICKUP
	+FLOATBOB
	
	States 
	{
		Spawn:
			AMAP A -1
			stop
	}
}

//FULL HEALTH
actor ExFullLife : Health 983 
{
	//$Category Powerups
	//$Title Full health
	
	Scale 0.4
	Radius 14
	Height 40

	Inventory.Amount 100
	Inventory.MaxAmount 100
	Inventory.PickupMessage "Full life"
	Inventory.PickupSound "pickups/mana2"
	
	+COUNTITEM
	+INVENTORY.AUTOACTIVATE
	+INVENTORY.ALWAYSPICKUP
	+INVENTORY.FANCYPICKUPSOUND
	+FLOATBOB
	
	States 
	{
		Spawn:
			LIFE A 0 NoDelay A_SetScale(-ScaleX, ScaleY) 
			LIFE ABCD 6
			LIFE E 0 A_SetScale(-ScaleX, ScaleY)
			LIFE EDCB 6
			loop
	}
}

//Time freezer. Given during death sequence in ACS
actor ExShowStopper : PowerupGiver
{
	Inventory.MaxAmount 0
	Powerup.Type TimeFreezer
  Powerup.Duration 0x7FFFFFFF
	//Powerup.Colormap 1.0, 1.0, 1.0
  
	+AUTOACTIVATE
}